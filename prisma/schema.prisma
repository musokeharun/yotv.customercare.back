// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Bulk {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  data        Json?
  popIndex    Int      @default(0)
  usage       Int      @default(0)
  contactName String   @db.VarChar(255)
  status      Boolean  @default(false)
  calls       Call[]
  tag         String?
  used        Int      @default(0)
}

model User {
  id            Int           @id @default(autoincrement())
  name          String?
  username      String?
  email         String        @unique
  password      String        @db.VarChar(255)
  calls         Call[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @default(now()) @updatedAt
  isAdmin       Boolean       @default(false)
  isActive      Boolean       @default(true)
  categories    Category[]
  subCategories SubCategory[]
}

model Call {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  contact     String    @unique @db.VarChar(255)
  respondedTo Boolean   @default(false)
  updatedAt   DateTime  @default(now()) @updatedAt
  createdAt   DateTime  @default(now())
  otherUsers  String?
  responseId  Int?
  bulkId      Int?
  response    Response? @relation(fields: [responseId], references: [id])
  bulk        Bulk?     @relation(fields: [bulkId], references: [id])
}

model Response {
  id            Int          @id @default(autoincrement())
  firstResponse FirstDegree  @default(RECEIVED)
  gender        Gender
  likely        Int          @default(0)
  suggestion    String?
  resolution    String?
  lastResponse  ResponseText?
  subCategoryId Int?
  subCategory   SubCategory? @relation(fields: [subCategoryId], references: [id])
  call          Call?
  other         String?
}

enum ResponseText {
    NO_RESPONSE
    FAILURE_TO_DOWNLOAD
    OFFLINE_ERROR
    SOMETHING_WENT_WRONG_ERROR
    MAXIMUM_DEVICES_ERROR
    DATA_DEPLETION
    DEVICE_RELATED_ISSUES
    ENCRYPTED_CONTENT_ERROR
    OTP_ISSUES
    FAILURE_TO_PLAY
    CHANNELS_DONOT_DISPLAY
    APP_CRUSHES
    BUFFERING
    CONTENT_RELATED
    OTHER
}

enum FirstDegree {
  BUSY
  RECEIVED
  REJECTED
  OFFLINE
}

enum Gender {
  MALE
  FEMALE
  NONE
}

model Category {
  id            Int           @id @default(autoincrement())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt @default(now())
  isActive      Boolean       @default(true)
  title         String        @db.VarChar(255)
  creator       User          @relation(fields: [createdBy], references: [id])
  createdBy     Int
  subCategories SubCategory[]
}

model SubCategory {
  id         Int       @id @default(autoincrement())
  title      String    @db.VarChar(255)
  isActive   Boolean   @default(true)
  category   Category  @relation(fields: [categoryId], references: [id])
  creator    User?     @relation(fields: [createdBy], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt @default(now())
  createdBy  Int?
  categoryId Int
  responses  Response[]
}

model Vendor {
  id        Int      @id @default(autoincrement())
  title     String
  codes     Json
  updatedAt DateTime @updatedAt @default(now())
  isActive  Boolean  @default(true)
}
